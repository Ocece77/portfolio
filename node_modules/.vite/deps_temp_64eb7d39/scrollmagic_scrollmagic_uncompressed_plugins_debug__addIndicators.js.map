{
  "version": 3,
  "sources": ["../../scrollmagic/scrollmagic/uncompressed/plugins/debug.addIndicators.js"],
  "sourcesContent": ["/*!\r\n * ScrollMagic v2.0.8 (2020-08-14)\r\n * The javascript library for magical scroll interactions.\r\n * (c) 2020 Jan Paepke (@janpaepke)\r\n * Project Website: http://scrollmagic.io\r\n * \r\n * @version 2.0.8\r\n * @license Dual licensed under MIT license and GPL.\r\n * @author Jan Paepke - e-mail@janpaepke.de\r\n *\r\n * @file Debug Extension for ScrollMagic.\r\n */\r\n/**\r\n * This plugin was formerly known as the ScrollMagic debug extension.\r\n *\r\n * It enables you to add visual indicators to your page, to be able to see exactly when a scene is triggered.\r\n *\r\n * To have access to this extension, please include `plugins/debug.addIndicators.js`.\r\n * @mixin debug.addIndicators\r\n */\r\n(function (root, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine(['ScrollMagic'], factory);\r\n\t} else if (typeof exports === 'object') {\r\n\t\t// CommonJS\r\n\t\tfactory(require('scrollmagic'));\r\n\t} else {\r\n\t\t// no browser global export needed, just execute\r\n\t\tfactory(root.ScrollMagic || (root.jQuery && root.jQuery.ScrollMagic));\r\n\t}\r\n}(this, function (ScrollMagic) {\r\n\t\"use strict\";\r\n\tvar NAMESPACE = \"debug.addIndicators\";\r\n\r\n\tvar\r\n\t\tconsole = window.console || {},\r\n\t\terr = Function.prototype.bind.call(console.error || console.log || function () {}, console);\r\n\tif (!ScrollMagic) {\r\n\t\terr(\"(\" + NAMESPACE + \") -> ERROR: The ScrollMagic main module could not be found. Please make sure it's loaded before this plugin or use an asynchronous loader like requirejs.\");\r\n\t}\r\n\r\n\t// plugin settings\r\n\tvar\r\n\t\tFONT_SIZE = \"0.85em\",\r\n\t\tZINDEX = \"9999\",\r\n\t\tEDGE_OFFSET = 15; // minimum edge distance, added to indentation\r\n\r\n\t// overall vars\r\n\tvar\r\n\t\t_util = ScrollMagic._util,\r\n\t\t_autoindex = 0;\r\n\r\n\r\n\r\n\tScrollMagic.Scene.extend(function () {\r\n\t\tvar\r\n\t\t\tScene = this,\r\n\t\t\t_indicator;\r\n\r\n\t\tvar log = function () {\r\n\t\t\tif (Scene._log) { // not available, when main source minified\r\n\t\t\t\tArray.prototype.splice.call(arguments, 1, 0, \"(\" + NAMESPACE + \")\", \"->\");\r\n\t\t\t\tScene._log.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Add visual indicators for a ScrollMagic.Scene.  \r\n\t\t * @memberof! debug.addIndicators#\r\n\t\t *\r\n\t\t * @example\r\n\t\t * // add basic indicators\r\n\t\t * scene.addIndicators()\r\n\t\t *\r\n\t\t * // passing options\r\n\t\t * scene.addIndicators({name: \"pin scene\", colorEnd: \"#FFFFFF\"});\r\n\t\t *\r\n\t\t * @param {object} [options] - An object containing one or more options for the indicators.\r\n\t\t * @param {(string|object)} [options.parent] - A selector, DOM Object or a jQuery object that the indicators should be added to.  \r\n\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t If undefined, the controller's container will be used.\r\n\t\t * @param {number} [options.name=\"\"] - This string will be displayed at the start and end indicators of the scene for identification purposes. If no name is supplied an automatic index will be used.\r\n\t\t * @param {number} [options.indent=0] - Additional position offset for the indicators (useful, when having multiple scenes starting at the same position).\r\n\t\t * @param {string} [options.colorStart=green] - CSS color definition for the start indicator.\r\n\t\t * @param {string} [options.colorEnd=red] - CSS color definition for the end indicator.\r\n\t\t * @param {string} [options.colorTrigger=blue] - CSS color definition for the trigger indicator.\r\n\t\t */\r\n\t\tScene.addIndicators = function (options) {\r\n\t\t\tif (!_indicator) {\r\n\t\t\t\tvar\r\n\t\t\t\t\tDEFAULT_OPTIONS = {\r\n\t\t\t\t\t\tname: \"\",\r\n\t\t\t\t\t\tindent: 0,\r\n\t\t\t\t\t\tparent: undefined,\r\n\t\t\t\t\t\tcolorStart: \"green\",\r\n\t\t\t\t\t\tcolorEnd: \"red\",\r\n\t\t\t\t\t\tcolorTrigger: \"blue\",\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\toptions = _util.extend({}, DEFAULT_OPTIONS, options);\r\n\r\n\t\t\t\t_autoindex++;\r\n\t\t\t\t_indicator = new Indicator(Scene, options);\r\n\r\n\t\t\t\tScene.on(\"add.plugin_addIndicators\", _indicator.add);\r\n\t\t\t\tScene.on(\"remove.plugin_addIndicators\", _indicator.remove);\r\n\t\t\t\tScene.on(\"destroy.plugin_addIndicators\", Scene.removeIndicators);\r\n\r\n\t\t\t\t// it the scene already has a controller we can start right away.\r\n\t\t\t\tif (Scene.controller()) {\r\n\t\t\t\t\t_indicator.add();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Scene;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Removes visual indicators from a ScrollMagic.Scene.\r\n\t\t * @memberof! debug.addIndicators#\r\n\t\t *\r\n\t\t * @example\r\n\t\t * // remove previously added indicators\r\n\t\t * scene.removeIndicators()\r\n\t\t *\r\n\t\t */\r\n\t\tScene.removeIndicators = function () {\r\n\t\t\tif (_indicator) {\r\n\t\t\t\t_indicator.remove();\r\n\t\t\t\tthis.off(\"*.plugin_addIndicators\");\r\n\t\t\t\t_indicator = undefined;\r\n\t\t\t}\r\n\t\t\treturn Scene;\r\n\t\t};\r\n\r\n\t});\r\n\r\n\r\n\t/*\r\n\t * ----------------------------------------------------------------\r\n\t * Extension for controller to store and update related indicators\r\n\t * ----------------------------------------------------------------\r\n\t */\r\n\t// add option to globally auto-add indicators to scenes\r\n\t/**\r\n\t * Every ScrollMagic.Controller instance now accepts an additional option.  \r\n\t * See {@link ScrollMagic.Controller} for a complete list of the standard options.\r\n\t * @memberof! debug.addIndicators#\r\n\t * @method new ScrollMagic.Controller(options)\r\n\t * @example\r\n\t * // make a controller and add indicators to all scenes attached\r\n\t * var controller = new ScrollMagic.Controller({addIndicators: true});\r\n\t * // this scene will automatically have indicators added to it\r\n\t * new ScrollMagic.Scene()\r\n\t *                .addTo(controller);\r\n\t *\r\n\t * @param {object} [options] - Options for the Controller.\r\n\t * @param {boolean} [options.addIndicators=false] - If set to `true` every scene that is added to the controller will automatically get indicators added to it.\r\n\t */\r\n\tScrollMagic.Controller.addOption(\"addIndicators\", false);\r\n\t// extend Controller\r\n\tScrollMagic.Controller.extend(function () {\r\n\t\tvar\r\n\t\t\tController = this,\r\n\t\t\t_info = Controller.info(),\r\n\t\t\t_container = _info.container,\r\n\t\t\t_isDocument = _info.isDocument,\r\n\t\t\t_vertical = _info.vertical,\r\n\t\t\t_indicators = { // container for all indicators and methods\r\n\t\t\t\tgroups: []\r\n\t\t\t};\r\n\r\n\t\tvar log = function () {\r\n\t\t\tif (Controller._log) { // not available, when main source minified\r\n\t\t\t\tArray.prototype.splice.call(arguments, 1, 0, \"(\" + NAMESPACE + \")\", \"->\");\r\n\t\t\t\tController._log.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (Controller._indicators) {\r\n\t\t\tlog(2, \"WARNING: Scene already has a property '_indicators', which will be overwritten by plugin.\");\r\n\t\t}\r\n\r\n\t\t// add indicators container\r\n\t\tthis._indicators = _indicators;\r\n\t\t/*\r\n\t\t\tneeded updates:\r\n\t\t\t+++++++++++++++\r\n\t\t\tstart/end position on scene shift (handled in Indicator class)\r\n\t\t\ttrigger parameters on triggerHook value change (handled in Indicator class)\r\n\t\t\tbounds position on container scroll or resize (to keep alignment to bottom/right)\r\n\t\t\ttrigger position on container resize, window resize (if container isn't document) and window scroll (if container isn't document)\r\n\t\t*/\r\n\r\n\t\t// event handler for when associated bounds markers need to be repositioned\r\n\t\tvar handleBoundsPositionChange = function () {\r\n\t\t\t_indicators.updateBoundsPositions();\r\n\t\t};\r\n\r\n\t\t// event handler for when associated trigger groups need to be repositioned\r\n\t\tvar handleTriggerPositionChange = function () {\r\n\t\t\t_indicators.updateTriggerGroupPositions();\r\n\t\t};\r\n\r\n\t\t_container.addEventListener(\"resize\", handleTriggerPositionChange);\r\n\t\tif (!_isDocument) {\r\n\t\t\twindow.addEventListener(\"resize\", handleTriggerPositionChange);\r\n\t\t\twindow.addEventListener(\"scroll\", handleTriggerPositionChange);\r\n\t\t}\r\n\t\t// update all related bounds containers\r\n\t\t_container.addEventListener(\"resize\", handleBoundsPositionChange);\r\n\t\t_container.addEventListener(\"scroll\", handleBoundsPositionChange);\r\n\r\n\r\n\t\t// updates the position of the bounds container to aligned to the right for vertical containers and to the bottom for horizontal\r\n\t\tthis._indicators.updateBoundsPositions = function (specificIndicator) {\r\n\t\t\tvar // constant for all bounds\r\n\t\t\t\tgroups = specificIndicator ? [_util.extend({}, specificIndicator.triggerGroup, {\r\n\t\t\t\t\tmembers: [specificIndicator]\r\n\t\t\t\t})] : // create a group with only one element\r\n\t\t\t\t_indicators.groups, // use all\r\n\t\t\t\tg = groups.length,\r\n\t\t\t\tcss = {},\r\n\t\t\t\tparamPos = _vertical ? \"left\" : \"top\",\r\n\t\t\t\tparamDimension = _vertical ? \"width\" : \"height\",\r\n\t\t\t\tedge = _vertical ?\r\n\t\t\t\t_util.get.scrollLeft(_container) + _util.get.width(_container) - EDGE_OFFSET :\r\n\t\t\t\t_util.get.scrollTop(_container) + _util.get.height(_container) - EDGE_OFFSET,\r\n\t\t\t\tb, triggerSize, group;\r\n\t\t\twhile (g--) { // group loop\r\n\t\t\t\tgroup = groups[g];\r\n\t\t\t\tb = group.members.length;\r\n\t\t\t\ttriggerSize = _util.get[paramDimension](group.element.firstChild);\r\n\t\t\t\twhile (b--) { // indicators loop\r\n\t\t\t\t\tcss[paramPos] = edge - triggerSize;\r\n\t\t\t\t\t_util.css(group.members[b].bounds, css);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// updates the positions of all trigger groups attached to a controller or a specific one, if provided\r\n\t\tthis._indicators.updateTriggerGroupPositions = function (specificGroup) {\r\n\t\t\tvar // constant vars\r\n\t\t\t\tgroups = specificGroup ? [specificGroup] : _indicators.groups,\r\n\t\t\t\ti = groups.length,\r\n\t\t\t\tcontainer = _isDocument ? document.body : _container,\r\n\t\t\t\tcontainerOffset = _isDocument ? {\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tleft: 0\r\n\t\t\t\t} : _util.get.offset(container, true),\r\n\t\t\t\tedge = _vertical ?\r\n\t\t\t\t_util.get.width(_container) - EDGE_OFFSET :\r\n\t\t\t\t_util.get.height(_container) - EDGE_OFFSET,\r\n\t\t\t\tparamDimension = _vertical ? \"width\" : \"height\",\r\n\t\t\t\tparamTransform = _vertical ? \"Y\" : \"X\";\r\n\t\t\tvar // changing vars\r\n\t\t\t\tgroup,\r\n\t\t\t\telem,\r\n\t\t\t\tpos,\r\n\t\t\t\telemSize,\r\n\t\t\t\ttransform;\r\n\t\t\twhile (i--) {\r\n\t\t\t\tgroup = groups[i];\r\n\t\t\t\telem = group.element;\r\n\t\t\t\tpos = group.triggerHook * Controller.info(\"size\");\r\n\t\t\t\telemSize = _util.get[paramDimension](elem.firstChild.firstChild);\r\n\t\t\t\ttransform = pos > elemSize ? \"translate\" + paramTransform + \"(-100%)\" : \"\";\r\n\r\n\t\t\t\t_util.css(elem, {\r\n\t\t\t\t\ttop: containerOffset.top + (_vertical ? pos : edge - group.members[0].options.indent),\r\n\t\t\t\t\tleft: containerOffset.left + (_vertical ? edge - group.members[0].options.indent : pos)\r\n\t\t\t\t});\r\n\t\t\t\t_util.css(elem.firstChild.firstChild, {\r\n\t\t\t\t\t\"-ms-transform\": transform,\r\n\t\t\t\t\t\"-webkit-transform\": transform,\r\n\t\t\t\t\t\"transform\": transform\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// updates the label for the group to contain the name, if it only has one member\r\n\t\tthis._indicators.updateTriggerGroupLabel = function (group) {\r\n\t\t\tvar\r\n\t\t\t\ttext = \"trigger\" + (group.members.length > 1 ? \"\" : \" \" + group.members[0].options.name),\r\n\t\t\t\telem = group.element.firstChild.firstChild,\r\n\t\t\t\tdoUpdate = elem.textContent !== text;\r\n\t\t\tif (doUpdate) {\r\n\t\t\t\telem.textContent = text;\r\n\t\t\t\tif (_vertical) { // bounds position is dependent on text length, so update\r\n\t\t\t\t\t_indicators.updateBoundsPositions();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// add indicators if global option is set\r\n\t\tthis.addScene = function (newScene) {\r\n\r\n\t\t\tif (this._options.addIndicators && newScene instanceof ScrollMagic.Scene && newScene.controller() === Controller) {\r\n\t\t\t\tnewScene.addIndicators();\r\n\t\t\t}\r\n\t\t\t// call original destroy method\r\n\t\t\tthis.$super.addScene.apply(this, arguments);\r\n\t\t};\r\n\r\n\t\t// remove all previously set listeners on destroy\r\n\t\tthis.destroy = function () {\r\n\t\t\t_container.removeEventListener(\"resize\", handleTriggerPositionChange);\r\n\t\t\tif (!_isDocument) {\r\n\t\t\t\twindow.removeEventListener(\"resize\", handleTriggerPositionChange);\r\n\t\t\t\twindow.removeEventListener(\"scroll\", handleTriggerPositionChange);\r\n\t\t\t}\r\n\t\t\t_container.removeEventListener(\"resize\", handleBoundsPositionChange);\r\n\t\t\t_container.removeEventListener(\"scroll\", handleBoundsPositionChange);\r\n\t\t\t// call original destroy method\r\n\t\t\tthis.$super.destroy.apply(this, arguments);\r\n\t\t};\r\n\t\treturn Controller;\r\n\r\n\t});\r\n\r\n\t/*\r\n\t * ----------------------------------------------------------------\r\n\t * Internal class for the construction of Indicators\r\n\t * ----------------------------------------------------------------\r\n\t */\r\n\tvar Indicator = function (Scene, options) {\r\n\t\tvar\r\n\t\t\tIndicator = this,\r\n\t\t\t_elemBounds = TPL.bounds(),\r\n\t\t\t_elemStart = TPL.start(options.colorStart),\r\n\t\t\t_elemEnd = TPL.end(options.colorEnd),\r\n\t\t\t_boundsContainer = options.parent && _util.get.elements(options.parent)[0],\r\n\t\t\t_vertical,\r\n\t\t\t_ctrl;\r\n\r\n\t\tvar log = function () {\r\n\t\t\tif (Scene._log) { // not available, when main source minified\r\n\t\t\t\tArray.prototype.splice.call(arguments, 1, 0, \"(\" + NAMESPACE + \")\", \"->\");\r\n\t\t\t\tScene._log.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\toptions.name = options.name || _autoindex;\r\n\r\n\t\t// prepare bounds elements\r\n\t\t_elemStart.firstChild.textContent += \" \" + options.name;\r\n\t\t_elemEnd.textContent += \" \" + options.name;\r\n\t\t_elemBounds.appendChild(_elemStart);\r\n\t\t_elemBounds.appendChild(_elemEnd);\r\n\r\n\t\t// set public variables\r\n\t\tIndicator.options = options;\r\n\t\tIndicator.bounds = _elemBounds;\r\n\t\t// will be set later\r\n\t\tIndicator.triggerGroup = undefined;\r\n\r\n\t\t// add indicators to DOM\r\n\t\tthis.add = function () {\r\n\t\t\t_ctrl = Scene.controller();\r\n\t\t\t_vertical = _ctrl.info(\"vertical\");\r\n\r\n\t\t\tvar isDocument = _ctrl.info(\"isDocument\");\r\n\r\n\t\t\tif (!_boundsContainer) {\r\n\t\t\t\t// no parent supplied or doesnt exist\r\n\t\t\t\t_boundsContainer = isDocument ? document.body : _ctrl.info(\"container\"); // check if window/document (then use body)\r\n\t\t\t}\r\n\t\t\tif (!isDocument && _util.css(_boundsContainer, \"position\") === 'static') {\r\n\t\t\t\t// position mode needed for correct positioning of indicators\r\n\t\t\t\t_util.css(_boundsContainer, {\r\n\t\t\t\t\tposition: \"relative\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// add listeners for updates\r\n\t\t\tScene.on(\"change.plugin_addIndicators\", handleTriggerParamsChange);\r\n\t\t\tScene.on(\"shift.plugin_addIndicators\", handleBoundsParamsChange);\r\n\r\n\t\t\t// updates trigger & bounds (will add elements if needed)\r\n\t\t\tupdateTriggerGroup();\r\n\t\t\tupdateBounds();\r\n\r\n\t\t\tsetTimeout(function () { // do after all execution is finished otherwise sometimes size calculations are off\r\n\t\t\t\t_ctrl._indicators.updateBoundsPositions(Indicator);\r\n\t\t\t}, 0);\r\n\r\n\t\t\tlog(3, \"added indicators\");\r\n\t\t};\r\n\r\n\t\t// remove indicators from DOM\r\n\t\tthis.remove = function () {\r\n\t\t\tif (Indicator.triggerGroup) { // if not set there's nothing to remove\r\n\t\t\t\tScene.off(\"change.plugin_addIndicators\", handleTriggerParamsChange);\r\n\t\t\t\tScene.off(\"shift.plugin_addIndicators\", handleBoundsParamsChange);\r\n\r\n\t\t\t\tif (Indicator.triggerGroup.members.length > 1) {\r\n\t\t\t\t\t// just remove from memberlist of old group\r\n\t\t\t\t\tvar group = Indicator.triggerGroup;\r\n\t\t\t\t\tgroup.members.splice(group.members.indexOf(Indicator), 1);\r\n\t\t\t\t\t_ctrl._indicators.updateTriggerGroupLabel(group);\r\n\t\t\t\t\t_ctrl._indicators.updateTriggerGroupPositions(group);\r\n\t\t\t\t\tIndicator.triggerGroup = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// remove complete group\r\n\t\t\t\t\tremoveTriggerGroup();\r\n\t\t\t\t}\r\n\t\t\t\tremoveBounds();\r\n\r\n\t\t\t\tlog(3, \"removed indicators\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/*\r\n\t\t * ----------------------------------------------------------------\r\n\t\t * internal Event Handlers\r\n\t\t * ----------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\t// event handler for when bounds params change\r\n\t\tvar handleBoundsParamsChange = function () {\r\n\t\t\tupdateBounds();\r\n\t\t};\r\n\r\n\t\t// event handler for when trigger params change\r\n\t\tvar handleTriggerParamsChange = function (e) {\r\n\t\t\tif (e.what === \"triggerHook\") {\r\n\t\t\t\tupdateTriggerGroup();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/*\r\n\t\t * ----------------------------------------------------------------\r\n\t\t * Bounds (start / stop) management\r\n\t\t * ----------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\t// adds an new bounds elements to the array and to the DOM\r\n\t\tvar addBounds = function () {\r\n\t\t\tvar v = _ctrl.info(\"vertical\");\r\n\t\t\t// apply stuff we didn't know before...\r\n\t\t\t_util.css(_elemStart.firstChild, {\r\n\t\t\t\t\"border-bottom-width\": v ? 1 : 0,\r\n\t\t\t\t\"border-right-width\": v ? 0 : 1,\r\n\t\t\t\t\"bottom\": v ? -1 : options.indent,\r\n\t\t\t\t\"right\": v ? options.indent : -1,\r\n\t\t\t\t\"padding\": v ? \"0 8px\" : \"2px 4px\",\r\n\t\t\t});\r\n\t\t\t_util.css(_elemEnd, {\r\n\t\t\t\t\"border-top-width\": v ? 1 : 0,\r\n\t\t\t\t\"border-left-width\": v ? 0 : 1,\r\n\t\t\t\t\"top\": v ? \"100%\" : \"\",\r\n\t\t\t\t\"right\": v ? options.indent : \"\",\r\n\t\t\t\t\"bottom\": v ? \"\" : options.indent,\r\n\t\t\t\t\"left\": v ? \"\" : \"100%\",\r\n\t\t\t\t\"padding\": v ? \"0 8px\" : \"2px 4px\"\r\n\t\t\t});\r\n\t\t\t// append\r\n\t\t\t_boundsContainer.appendChild(_elemBounds);\r\n\t\t};\r\n\r\n\t\t// remove bounds from list and DOM\r\n\t\tvar removeBounds = function () {\r\n\t\t\t_elemBounds.parentNode.removeChild(_elemBounds);\r\n\t\t};\r\n\r\n\t\t// update the start and end positions of the scene\r\n\t\tvar updateBounds = function () {\r\n\t\t\tif (_elemBounds.parentNode !== _boundsContainer) {\r\n\t\t\t\taddBounds(); // Add Bounds elements (start/end)\r\n\t\t\t}\r\n\t\t\tvar css = {};\r\n\t\t\tcss[_vertical ? \"top\" : \"left\"] = Scene.triggerPosition();\r\n\t\t\tcss[_vertical ? \"height\" : \"width\"] = Scene.duration();\r\n\t\t\t_util.css(_elemBounds, css);\r\n\t\t\t_util.css(_elemEnd, {\r\n\t\t\t\tdisplay: Scene.duration() > 0 ? \"\" : \"none\"\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/*\r\n\t\t * ----------------------------------------------------------------\r\n\t\t * trigger and trigger group management\r\n\t\t * ----------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\t// adds an new trigger group to the array and to the DOM\r\n\t\tvar addTriggerGroup = function () {\r\n\t\t\tvar triggerElem = TPL.trigger(options.colorTrigger); // new trigger element\r\n\t\t\tvar css = {};\r\n\t\t\tcss[_vertical ? \"right\" : \"bottom\"] = 0;\r\n\t\t\tcss[_vertical ? \"border-top-width\" : \"border-left-width\"] = 1;\r\n\t\t\t_util.css(triggerElem.firstChild, css);\r\n\t\t\t_util.css(triggerElem.firstChild.firstChild, {\r\n\t\t\t\tpadding: _vertical ? \"0 8px 3px 8px\" : \"3px 4px\"\r\n\t\t\t});\r\n\t\t\tdocument.body.appendChild(triggerElem); // directly add to body\r\n\t\t\tvar newGroup = {\r\n\t\t\t\ttriggerHook: Scene.triggerHook(),\r\n\t\t\t\telement: triggerElem,\r\n\t\t\t\tmembers: [Indicator]\r\n\t\t\t};\r\n\t\t\t_ctrl._indicators.groups.push(newGroup);\r\n\t\t\tIndicator.triggerGroup = newGroup;\r\n\t\t\t// update right away\r\n\t\t\t_ctrl._indicators.updateTriggerGroupLabel(newGroup);\r\n\t\t\t_ctrl._indicators.updateTriggerGroupPositions(newGroup);\r\n\t\t};\r\n\r\n\t\tvar removeTriggerGroup = function () {\r\n\t\t\t_ctrl._indicators.groups.splice(_ctrl._indicators.groups.indexOf(Indicator.triggerGroup), 1);\r\n\t\t\tIndicator.triggerGroup.element.parentNode.removeChild(Indicator.triggerGroup.element);\r\n\t\t\tIndicator.triggerGroup = undefined;\r\n\t\t};\r\n\r\n\t\t// updates the trigger group -> either join existing or add new one\r\n\t\t/*\t\r\n\t\t * Logic:\r\n\t\t * 1 if a trigger group exist, check if it's in sync with Scene settings – if so, nothing else needs to happen\r\n\t\t * 2 try to find an existing one that matches Scene parameters\r\n\t\t * \t 2.1 If a match is found check if already assigned to an existing group\r\n\t\t *\t\t\t If so:\r\n\t\t *       A: it was the last member of existing group -> kill whole group\r\n\t\t *       B: the existing group has other members -> just remove from member list\r\n\t\t *\t 2.2 Assign to matching group\r\n\t\t * 3 if no new match could be found, check if assigned to existing group\r\n\t\t *   A: yes, and it's the only member -> just update parameters and positions and keep using this group\r\n\t\t *   B: yes but there are other members -> remove from member list and create a new one\r\n\t\t *   C: no, so create a new one\r\n\t\t */\r\n\t\tvar updateTriggerGroup = function () {\r\n\t\t\tvar\r\n\t\t\t\ttriggerHook = Scene.triggerHook(),\r\n\t\t\t\tcloseEnough = 0.0001;\r\n\r\n\t\t\t// Have a group, check if it still matches\r\n\t\t\tif (Indicator.triggerGroup) {\r\n\t\t\t\tif (Math.abs(Indicator.triggerGroup.triggerHook - triggerHook) < closeEnough) {\r\n\t\t\t\t\t// _util.log(0, \"trigger\", options.name, \"->\", \"no need to change, still in sync\");\r\n\t\t\t\t\treturn; // all good\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Don't have a group, check if a matching one exists\r\n\t\t\t// _util.log(0, \"trigger\", options.name, \"->\", \"out of sync!\");\r\n\t\t\tvar\r\n\t\t\t\tgroups = _ctrl._indicators.groups,\r\n\t\t\t\tgroup,\r\n\t\t\t\ti = groups.length;\r\n\t\t\twhile (i--) {\r\n\t\t\t\tgroup = groups[i];\r\n\t\t\t\tif (Math.abs(group.triggerHook - triggerHook) < closeEnough) {\r\n\t\t\t\t\t// found a match!\r\n\t\t\t\t\t// _util.log(0, \"trigger\", options.name, \"->\", \"found match\");\r\n\t\t\t\t\tif (Indicator.triggerGroup) { // do I have an old group that is out of sync?\r\n\t\t\t\t\t\tif (Indicator.triggerGroup.members.length === 1) { // is it the only remaining group?\r\n\t\t\t\t\t\t\t// _util.log(0, \"trigger\", options.name, \"->\", \"kill\");\r\n\t\t\t\t\t\t\t// was the last member, remove the whole group\r\n\t\t\t\t\t\t\tremoveTriggerGroup();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tIndicator.triggerGroup.members.splice(Indicator.triggerGroup.members.indexOf(Indicator), 1); // just remove from memberlist of old group\r\n\t\t\t\t\t\t\t_ctrl._indicators.updateTriggerGroupLabel(Indicator.triggerGroup);\r\n\t\t\t\t\t\t\t_ctrl._indicators.updateTriggerGroupPositions(Indicator.triggerGroup);\r\n\t\t\t\t\t\t\t// _util.log(0, \"trigger\", options.name, \"->\", \"removing from previous member list\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// join new group\r\n\t\t\t\t\tgroup.members.push(Indicator);\r\n\t\t\t\t\tIndicator.triggerGroup = group;\r\n\t\t\t\t\t_ctrl._indicators.updateTriggerGroupLabel(group);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// at this point I am obviously out of sync and don't match any other group\r\n\t\t\tif (Indicator.triggerGroup) {\r\n\t\t\t\tif (Indicator.triggerGroup.members.length === 1) {\r\n\t\t\t\t\t// _util.log(0, \"trigger\", options.name, \"->\", \"updating existing\");\r\n\t\t\t\t\t// out of sync but i'm the only member => just change and update\r\n\t\t\t\t\tIndicator.triggerGroup.triggerHook = triggerHook;\r\n\t\t\t\t\t_ctrl._indicators.updateTriggerGroupPositions(Indicator.triggerGroup);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// _util.log(0, \"trigger\", options.name, \"->\", \"removing from previous member list\");\r\n\t\t\t\t\tIndicator.triggerGroup.members.splice(Indicator.triggerGroup.members.indexOf(Indicator), 1); // just remove from memberlist of old group\r\n\t\t\t\t\t_ctrl._indicators.updateTriggerGroupLabel(Indicator.triggerGroup);\r\n\t\t\t\t\t_ctrl._indicators.updateTriggerGroupPositions(Indicator.triggerGroup);\r\n\t\t\t\t\tIndicator.triggerGroup = undefined; // need a brand new group...\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// _util.log(0, \"trigger\", options.name, \"->\", \"add a new one\");\r\n\t\t\t// did not find any match, make new trigger group\r\n\t\t\taddTriggerGroup();\r\n\t\t};\r\n\t};\r\n\r\n\t/*\r\n\t * ----------------------------------------------------------------\r\n\t * Templates for the indicators\r\n\t * ----------------------------------------------------------------\r\n\t */\r\n\tvar TPL = {\r\n\t\tstart: function (color) {\r\n\t\t\t// inner element (for bottom offset -1, while keeping top position 0)\r\n\t\t\tvar inner = document.createElement(\"div\");\r\n\t\t\tinner.textContent = \"start\";\r\n\t\t\t_util.css(inner, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\toverflow: \"visible\",\r\n\t\t\t\t\"border-width\": 0,\r\n\t\t\t\t\"border-style\": \"solid\",\r\n\t\t\t\tcolor: color,\r\n\t\t\t\t\"border-color\": color\r\n\t\t\t});\r\n\t\t\tvar e = document.createElement('div');\r\n\t\t\t// wrapper\r\n\t\t\t_util.css(e, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\toverflow: \"visible\",\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t});\r\n\t\t\te.appendChild(inner);\r\n\t\t\treturn e;\r\n\t\t},\r\n\t\tend: function (color) {\r\n\t\t\tvar e = document.createElement('div');\r\n\t\t\te.textContent = \"end\";\r\n\t\t\t_util.css(e, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\toverflow: \"visible\",\r\n\t\t\t\t\"border-width\": 0,\r\n\t\t\t\t\"border-style\": \"solid\",\r\n\t\t\t\tcolor: color,\r\n\t\t\t\t\"border-color\": color\r\n\t\t\t});\r\n\t\t\treturn e;\r\n\t\t},\r\n\t\tbounds: function () {\r\n\t\t\tvar e = document.createElement('div');\r\n\t\t\t_util.css(e, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\toverflow: \"visible\",\r\n\t\t\t\t\"white-space\": \"nowrap\",\r\n\t\t\t\t\"pointer-events\": \"none\",\r\n\t\t\t\t\"font-size\": FONT_SIZE\r\n\t\t\t});\r\n\t\t\te.style.zIndex = ZINDEX;\r\n\t\t\treturn e;\r\n\t\t},\r\n\t\ttrigger: function (color) {\r\n\t\t\t// inner to be above or below line but keep position\r\n\t\t\tvar inner = document.createElement('div');\r\n\t\t\tinner.textContent = \"trigger\";\r\n\t\t\t_util.css(inner, {\r\n\t\t\t\tposition: \"relative\",\r\n\t\t\t});\r\n\t\t\t// inner wrapper for right: 0 and main element has no size\r\n\t\t\tvar w = document.createElement('div');\r\n\t\t\t_util.css(w, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\toverflow: \"visible\",\r\n\t\t\t\t\"border-width\": 0,\r\n\t\t\t\t\"border-style\": \"solid\",\r\n\t\t\t\tcolor: color,\r\n\t\t\t\t\"border-color\": color\r\n\t\t\t});\r\n\t\t\tw.appendChild(inner);\r\n\t\t\t// wrapper\r\n\t\t\tvar e = document.createElement('div');\r\n\t\t\t_util.css(e, {\r\n\t\t\t\tposition: \"fixed\",\r\n\t\t\t\toverflow: \"visible\",\r\n\t\t\t\t\"white-space\": \"nowrap\",\r\n\t\t\t\t\"pointer-events\": \"none\",\r\n\t\t\t\t\"font-size\": FONT_SIZE\r\n\t\t\t});\r\n\t\t\te.style.zIndex = ZINDEX;\r\n\t\t\te.appendChild(w);\r\n\t\t\treturn e;\r\n\t\t},\r\n\t};\r\n\r\n}));"],
  "mappings": "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",
  "names": ["Indicator"]
}
